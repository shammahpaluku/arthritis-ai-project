-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.doctor_patient
(
    doctor_id integer NOT NULL,
    patient_id integer NOT NULL,
    CONSTRAINT doctor_patient_pkey PRIMARY KEY (doctor_id, patient_id)
);

CREATE TABLE IF NOT EXISTS public.doctors
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    license_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    specialty character varying(100) COLLATE pg_catalog."default" NOT NULL,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT doctors_pkey PRIMARY KEY (id)
);

COMMENT ON COLUMN public.doctors.license_number
    IS 'Medical license number in format ABC-12345';

CREATE TABLE IF NOT EXISTS public.images
(
    id serial NOT NULL,
    patient_id integer NOT NULL,
    image_url text COLLATE pg_catalog."default" NOT NULL,
    uploaded_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    metadata jsonb,
    file_size bigint,
    file_type character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT images_pkey PRIMARY KEY (id)
);

COMMENT ON TABLE public.images
    IS 'Stores all medical imaging uploads with metadata';

COMMENT ON COLUMN public.images.file_type
    IS 'Medical image format including DICOM support';

CREATE TABLE IF NOT EXISTS public.logs
(
    id serial NOT NULL,
    user_id integer,
    action text COLLATE pg_catalog."default" NOT NULL,
    "timestamp" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT logs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.patients
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    age integer,
    gender character varying(10) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    user_id integer NOT NULL,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT patients_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.results
(
    id serial NOT NULL,
    patient_id integer NOT NULL,
    diagnosis text COLLATE pg_catalog."default" NOT NULL,
    confidence double precision NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    image_id integer,
    severity character varying(20) COLLATE pg_catalog."default",
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT results_pkey PRIMARY KEY (id)
);

COMMENT ON COLUMN public.results.confidence
    IS 'AI confidence score between 0 and 1';

COMMENT ON COLUMN public.results.severity
    IS 'Clinical severity assessment levels';

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    role character varying(20) COLLATE pg_catalog."default" DEFAULT 'user'::character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_username_key UNIQUE (username)
);

ALTER TABLE IF EXISTS public.doctor_patient
    ADD CONSTRAINT doctor_patient_doctor_id_fkey FOREIGN KEY (doctor_id)
    REFERENCES public.doctors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.doctor_patient
    ADD CONSTRAINT doctor_patient_patient_id_fkey FOREIGN KEY (patient_id)
    REFERENCES public.patients (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_doctor_patient_patient_id
    ON public.doctor_patient(patient_id);


ALTER TABLE IF EXISTS public.doctors
    ADD CONSTRAINT doctors_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_doctors_user_id
    ON public.doctors(user_id);


ALTER TABLE IF EXISTS public.images
    ADD CONSTRAINT images_patient_id_fkey FOREIGN KEY (patient_id)
    REFERENCES public.patients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_images_patient_id
    ON public.images(patient_id);


ALTER TABLE IF EXISTS public.logs
    ADD CONSTRAINT logs_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.patients
    ADD CONSTRAINT patients_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_patients_user_id
    ON public.patients(user_id);


ALTER TABLE IF EXISTS public.results
    ADD CONSTRAINT fk_image FOREIGN KEY (image_id)
    REFERENCES public.images (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_results_image_id
    ON public.results(image_id);


ALTER TABLE IF EXISTS public.results
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id)
    REFERENCES public.patients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_results_patient_id
    ON public.results(patient_id);

END;
